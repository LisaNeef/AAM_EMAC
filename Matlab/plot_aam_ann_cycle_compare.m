function plot_aam_ann_cycle_compare(comp,term,compgeo,plot_label,export,label_x_axis,label_y_axis)
% Comparing the monthly mean AAM terms in EMAC output for different 
% datasets
%
% INPUTS:
% 	comp: which component -- choose 1, 2, or 3.
%   term: 1 for wind, 2 for mass, 3 for total.
%	compgeo: set to 1 in order to just compare CCMVal and ERA to GEO
%   plot_label: string with which the plot should be labeled.
%
% MODS:
%  2 Mar 2011: fixed messed up plot labels.
%  2 Mar 2011: added ERA-Interim result for comparison.
% 30 Mar 2011: modify some file paths.
%	also modified CCMVal color.
% 19 May 2011: fixed a small botch: mixed up ERA Interim and 40.
%  7 Jul 2011: cosmetic fixes for paper submission.
% 13 Jul 2011: take the CCMVal run out of the compgeo plots -- it's a bit
% overkill.
%  5 Sep 2011: Remove the E-40 data for simplicity, and remove the shading
%  on the EMAC runs , also for simplicity.
%   12 Sep 2011: modifications for more control from external functions
%
%---specify AAM monthly mean data fiels and run names
%   (data files generated by aam_emac_volint_mm.m)
%----------------------------

% temp stuff
%figure(1),clf
%clear all;
%compgeo = 0;
%plot_label = '  ';
%term = 1;
%comp = 1;
%export = 0;
%label_x_axis = 1;
%label_y_axis = 1;

if compgeo
  R = [10,6];
else
  R = [6,1:4];
end

[runs,names,ef] = aam_paper_runs;
nf = length(runs);

%---load constants and compute AAM prefactors

aam_constants_gross
Re = Re_m;	% (use earth radius in meters)

% new form (Gross 09)
pm12 = -1.608*0.684*Re^4/(g*(C-A));
pw12 = -1.608*Re^3/(Q*g*(C-A));
pm3  = 0.997*0.750*Re^4/(g*Cm);
pw3  = 0.997*Re^3/(Q*g*Cm);
pm = [pm12; pm12; pm3];
pw = [pw12; pw12; pw3];

% cycle through files, load data, store interannual means.
X = zeros(nf,3,12)+NaN;
dX = zeros(nf,3,12)+NaN;

for irun = R
  % load monthly mean data by data type
  data_type = ef(irun);

  switch data_type

    % (1) EMAC data
    case 1
      runid = runs(irun);
      sdir = ['/dsk/nathan/lisa/EMAC_ex/',char(runid),'/mat/'];
      ff = dir([sdir,'aam_vol_mm_*.mat']);
      fname = [sdir,ff.name];
      if exist(fname,'file')==2, load(fname), else disp(['cant find mat file for ' char(runid)]), return, end

    % (2) ERA data
    case 2
      runid = char(runs(irun));
      if strcmp(runid,'ERA40'), era_type = 2; end
      if strcmp(runid,'ERAinterim'), era_type = 1; end
      [Xw_mm,Xm_mm] = aam_era_mm('aam',era_type);

    % (3) geodetic observations
    case 3
      [X_mm] = aam_geo_mm;
      % here make dummy "mass" and "wind" components so that the overall coding is cleaner.
      % do this by sticking entire signal into "mass".
      Xm_mm = X_mm;
      Xw_mm = X_mm*0;
  end 

  % in all cases subtract out the LT means of each term
  % (see notes vol. 4, p. 18)
  Xm_mm_dt = squeeze(Xm_mm(comp,:,:))*0+NaN;
  Xw_mm_dt = squeeze(Xw_mm(comp,:,:))*0+NaN;
  % loop over 3 vector components and detrend each term.
  for iy = 1:size(Xm_mm,3), Xm_mm_dt(:,iy) = detrend(Xm_mm(comp,:,iy),'constant'); end
  for iy = 1:size(Xw_mm,3), Xw_mm_dt(:,iy) = detrend(Xw_mm(comp,:,iy),'constant'); end
  
  % for emac runs, scale detrended terms by prefactors defined above
  if data_type == 1
    pfm = pm(comp);
    pfw = pw(comp);
    if comp < 3
      unit_conversion = rad2mas;	% conversion to mas for equatorial functions
    else
      unit_conversion = LOD0_ms;	% unit converstion to ms for axial.
    end
  else
    pfm = 1; 
    pfw = 1; 
    unit_conversion = 1;
  end
  Xm_mm_dt_scal = pfm*unit_conversion*Xm_mm_dt;
  Xw_mm_dt_scal = pfw*unit_conversion*Xw_mm_dt;

  % for all runs, compute interannual mean, standard deviation, etc
  Xmean =  zeros(2,12);
  Xstd =  zeros(2,12);
  flag = 0;	% (for std, use N-1 normalization)
  Xmean(1,:,:) = nanmean(Xw_mm_dt_scal,2); 
  Xmean(2,:,:) = nanmean(Xm_mm_dt_scal,2); 
  Xstd(1,:,:) = nanstd(Xw_mm_dt_scal,flag,2);
  Xstd(2,:,:) = nanstd(Xm_mm_dt_scal,flag,2);

  % fill in the mean terms, etc
  X(irun,1:2,:) = Xmean;
  X(irun,3,:) = sum(Xmean,1);
  dX(irun,1:2,:) = Xstd;
  dX(irun,3,:) = sqrt(sum(Xstd.^2,1));

  % now that we have the total for the geodetic data, erase the fake "mass" terms.
  % (i.e. for geo, the separate terms should all be NaNs.
  if data_type == 3
    X(irun,1:2,:) = Xmean*0+NaN;
  end

end


%--plot settings

LW = 2;

col_big = aam_paper_colors;
if compgeo
    col_big(4,:) = [0.2785    0.5469    0.9575]; 
end
col_big(6,:) = zeros(1,3);          % make ERA-Interim all black here.
col = col_big(R,:);

dum = spring(20);
pink = dum(10,:);
gray = 0.7*ones(1,3);

transparency = 0.8;
FS = 16;

ax = zeros(3,2);
ax(1,:) = 60*[-1,1];	% range for X1 in mas
ax(2,:) = 60*[-1,1];	% range for X2 in mas
ax(3,:) = 1*[-1,1];	% range for DLOD in ms

switch comp
    case 1
        dy = 20;
    case 2
        dy = 20;
    case 3
        dy = 0.2;
end

ytick = ax(comp,1):dy:ax(comp,2);
ytick(1) = NaN;
ytick(length(ytick)) = NaN;

% set option of which runs to show here:

names_short = names(R);
lh = zeros(length(R),1);

%--- make plots!

  for irun = 1:length(R);
      x = squeeze(X(R(irun),term,:))';
      dx = squeeze(dX(R(irun),term,:))';
      hold on
         if ~compgeo
             if R(irun) == 6
                 jbfill(1:12,x+dx,x-dx,gray,ones(1,3),1,transparency); 
             end
             hold on
         else
             if R(irun) == 10
                 jbfill(1:12,x+dx,x-dx,pink,ones(1,3),1,transparency); 
                 hold on
             else
                plot(1:12,x+dx,'--','Color',col(irun,:),'LineWidth',0.5*LW);
                plot(1:12,x-dx,'--','Color',col(irun,:),'LineWidth',0.5*LW); 
             end
         end
         lh(irun) = plot(1:12,x,'Color',col(irun,:),'LineWidth',LW);            
    
    end

    axis([0 12 ax(comp,:)]);
    
    if label_x_axis
        xlabel('Month')
    else
        set(gca,'XTickLabel','')
    end
    
    if label_y_axis
        if comp < 3, ylabel('mas'), else ylabel('ms'), end
    else
        set(gca,'YTickLabel','')
    end
    
   
    legend(lh,names_short,'Location','NorthEast','Orientation','Vertical')
    legend('BoxOff')
    
    set(gca,'LineWidth',3.0)
    set(gca,'XLim',[1,12])
    set(gca,'YTick',ytick)
    
    % put the legend in as text
        yax = get(gca,'Ylim');
        dyax = yax(2)-yax(1);
        xax = get(gca,'Xlim');
        dxax = xax(2)-xax(1);
   % if compgeo
   %     for irun = 1:length(R)
   %         text(xax(1)+(0.01+0.2*(irun-1))*dxax,yax(1)+0.1*dyax,names_short(irun),'Color',col(irun,:),'FontSize',FS)
   %     end
   % end
    text(xax(1)+0.05*dxax,yax(1)+0.9*dyax,plot_label,'FontSize',FS)

    % change the x-axis to run from month 1 to 12, and label the months.
    set(gca,'XTick',1:12)
    months = ['J';'F';'M';'A';'M';'J';'J';'A';'S';'O';'N';'D'];
    set(gca,'XTickLabel',months)

    
if export

plot_dir = '/home/ig/neef/Documents/Plots/aam_run_comparison/';
if compgeo
  fig_name_w = [plot_dir,'comp_ann_cycle_X',num2str(comp),'w_geo.png'];
  fig_name_m = [plot_dir,'comp_ann_cycle_X',num2str(comp),'m_geo.png'];
  fig_name_t = [plot_dir,'comp_ann_cycle_X',num2str(comp),'_geo.png'];
else
  fig_name_w = [plot_dir,'comp_ann_cycle_X',num2str(comp),'w.png'];
  fig_name_m = [plot_dir,'comp_ann_cycle_X',num2str(comp),'m.png'];
  fig_name_t = [plot_dir,'comp_ann_cycle_X',num2str(comp),'.png'];
end

rend = 'opengl';
ph = 8;	% paper height
pw = 10;	% paper width
fs = 25;	% fontsize

  if term == 1, fig_name = fig_name_w; end
  if term == 2, fig_name = fig_name_m; end
  if term == 3, fig_name = fig_name_t; end
  exportfig(1,fig_name,'width',pw,'height',ph,'fontmode','fixed', 'fontsize',fs,'color','cmyk','renderer',rend,'LineMode','fixed','LineWidth',LW,'format','png');

end

