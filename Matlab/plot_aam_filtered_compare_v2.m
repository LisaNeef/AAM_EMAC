function [h1,h2,hlegend] = plot_aam_filtered_compare_v2(comp,tscale,plot_type,add_SOI,terms, error_case,plot_label, export, label_x_axis)
% Plot the the timeseries of AAM (filtered to the desired timescale) for various EMAC runs.
% The mac files loaded here are generated by aam_emac_volintegral.m
% v3 streamlines everything and makes use of predefined run settings.
%       
% Mods:
%   28 jan 2011: instead of showing individual EMAC timeslice runs, just shade
%	between them, to make the runs with time-dependent BCs more visible.
%    9 Mar 2011: add plot type 7
%   14 Mar 2011: add tscale 5 - annual cycle
%   14 Mar 2011: for tscale 4, add option of adding SOI index 
%   12 May 2011: change plots of residual to showing not the diff between two geodetic residuals,
%		 but rather the (unfiltered) obs error.
%    6 Jul 2011: cosmetic revisions to the plots.
%   30 Aug 2011: remove ERA-Interim from the interannual variation plot for
%   simplicity.
%   12 Sept 2011: adapt for subplotting with an external routine.
%
% INPUTS:
%   comp: 1, 2, or 3 (vector component)
%   tscale: which timescale to look at.
%	tscale = 1: 30-90 day variations.
%	tscale = 2: annual cycle
%	tscale = 3: 2-7 year variation.
%	tscale = 4: 7-20 year variations.
%	tscale = 5: annual cycle only
%   plot_type: different settings, add ones as needed.
%       1: comparison of all EMAC runs, both ERAs, and the atmosp. residual
%       2: comparison of only CCMVal, ERA40, ERA-Interim, and the atmosp.
%       residual -- used for paper
%       3: comparison of only CCMVal, ERA40, OAM, HAM, and GEO.
%       4: comparison of GEO and CAM 
%       5: comparison of CCMVal data with and without the IB correction
%       6: comparison of ERA40, ERAint, NET, and all emac runs lobbed together.
%       7: like 2, but removing ERA-Int (better for talks)
%   add_SOI: set to 1 to plot the SOI along with the timeseries (only useful for IAV)
%   terms: optional vector of which terms of AEFs to plot 1 = wind, 2 = mass, 3 = total.
%   error_case: set to 1 to compare two residual estimates or 2
%   to use the error estimates delivered with the obs.
%   plot_label: string that labels the plot, including letter labels for
%   the paper.
%   export: set to 1 to export individually as a png file.
%   label_x_axis: set to 0 to forego the x labels here.
%--------------------------------------------------------------------------

%---temp inputs--------------------------

%figure(1),clf
%plot_type = 2;
%terms = 3;
%error_case = 1;
%tscale = 3;
%plot_label = '(a) \chi_2 ';
%add_SOI = 0;
%comp = 2;
%export = 0;
%label_x_axis = 0;


addpath('/home/ig/neef/MFiles/AM/')
addpath('/home/ig/neef/MFiles/DART/')
addpath('/home/ig/neef/MFiles/utilities/')
addpath('/home/ig/neef/MFiles/netcdf/mexcdf/snctools/')
addpath('/home/ig/neef/MFiles/netcdf/mexcdf/mexnc/','-BEGIN')

% select the timescales to examine here,
% plus the runs we want to focus on for each timescale.
date_start = [1962,1,1];
date_stop = [1999,1,1];
if tscale == 1
  T = [30,90]; 
  date_start = [1997,1,1];		% this timespan contains MJO signals, and includes 2 ocean estimates.
  date_stop = [1999,12,31];
end
if tscale == 2
  Tm = [23,34];
  Ty = Tm*(1/12); T = Ty*365; 
end
if tscale == 3
  Ty = [2,7]; T = Ty*365; 
end
if tscale == 4
  Ty = [7,20]; T = Ty*365; 
end
if tscale == 5
  T = [350,400];
end

if tscale == 1, tscalename = 'Subseasonal'; end
if tscale == 2, tscalename = 'QB'; end
if tscale == 3, tscalename = 'Interannual'; end
if tscale == 4, tscalename = 'Long-Term'; end
if tscale == 5, tscalename = 'Annual'; end

if tscale ~= 3
  if plot_type == 7
    disp(['Plot_type 7 is not (yet) supported for timescale  ', tscalename])
    return
  end
end



% define runs to retrieve here.
[runs,names_total,ef,no_ib] = aam_paper_runs;
%	1: comparison of all EMAC runs, both ERAs, and the atmosp. residual
%	2: comparison of all the above, but excluding ERA

switch plot_type
    case 1
        R = [1:8,10,11,18,19];
    case 2
        if error_case == 2
            R = [4:8,10,11,19,20];
        else
            R = [4:8,10,11,18,19,20];
        end
    case 6
        R = [4:8,10,11,20];
    case 7
        R = [4:5,7:8,10,11,18,19];
end

nR = length(R);

% define filter settings
  fo = 2;		% greater than 2 seems to not work for ERA data
  ft = 1;			% butterworth filter


%  big array to hold the relevant timeseries
mjd0 = date2mjd(date_start(1),date_start(2),date_start(3));
mjdf = date2mjd(date_stop(1),date_stop(2),date_stop(3));
nd = mjdf-mjd0+1;
XX = zeros(nR,3,nd);
XXF = zeros(nR,3,nd);

%--cycle through the specified runs and load pre-computed AAM data
net1 = NaN;	% default: we don't compute a net AEF residual
net2 = NaN;

for irun = R
  % retrieve filtered timeseries
  ERP_var_type = 'p';
  if strcmp(runs(irun),'UNC'), ERP_var_type = 'u'; end
  [X,XF,MJD] =  retrieve_AAM_filtered(runs(irun),T,ft,fo,date_start,date_stop, ef(irun),no_ib(irun),ERP_var_type); 
  XX(irun,:,:) = X(:,comp,:);
  XXF(irun,:,:) = XF(:,comp,:);

  % also note  where OAM, HAM, and CAM live so we can compute the residual AEF
  nn = char(runs(irun));
  if length(nn) == 5
    if strcmp(nn,'OAM40'), oam1 = irun; end
    if strcmp(nn,'OAMec'), oam2 = irun; end
    if strcmp(nn,'HAM40'), ham = irun; end
    if strcmp(nn,'CAMs4'), cam = irun; end
  end
  if length(nn) == 4
    if strcmp(nn,'NET1'), net1 = irun; end
    if strcmp(nn,'NET2'), net2 = irun; end
  end
  if strcmp(nn,'GEO'), geo = irun; end
end

%--compute AEF residuals from GEO.

if isfinite(net1)
  if tscale == 4
    XX(net1,:,:) = XX(geo,:,:)-XX(oam1,:,:)-XX(ham,:,:)-XX(cam,:,:);
    XXF(net1,:,:) = XXF(geo,:,:)-XXF(oam1,:,:)-XXF(ham,:,:)-XXF(cam,:,:);
  else
    XX(net1,:,:) = XX(geo,:,:)-XX(oam1,:,:)-XX(ham,:,:);
    XXF(net1,:,:) = XXF(geo,:,:)-XXF(oam1,:,:)-XXF(ham,:,:);
  end
end

if isfinite(net2)
  if tscale == 4
    XX(net2,:,:) = XX(geo,:,:)-XX(oam2,:,:)-XX(ham,:,:)-XX(cam,:,:);
    XXF(net2,:,:) = XXF(geo,:,:)-XXF(oam2,:,:)-XXF(ham,:,:)-XXF(cam,:,:);
  else
    XX(net2,:,:) = XX(geo,:,:)-XX(oam2,:,:)-XX(ham,:,:);
    XXF(net2,:,:) = XXF(geo,:,:)-XXF(oam2,:,:)-XXF(ham,:,:);
  end
end

%--load Southern Oscillation Index for X_3 IAV plot.
soi_dir = '/dsk/nathan/lisa/ENSO/';
soi_ff = 'SOI.nc';
SOI = nc_varget([soi_dir,soi_ff],'SOI_SIGNAL');
date_soi = nc_varget([soi_dir,soi_ff],'time');

% convert time to matlab-friendly axis here
nsoi = length(date_soi);
tsoi = zeros(1,nsoi);

ysoi = date_soi/100;
msoi = date_soi-ysoi*100;
for ii=1:nsoi
  tsoi(ii) = datenum([double(ysoi(ii)) double(msoi(ii)) 1]);
end


%---plot settings

% labels and titles
YL = {'\chi_1 (mas)', '\chi_2 (mas)', '\chi_3 (ms)'};


% axis for individual terms
ax = zeros(3,2);
switch tscale
  case 1  % subseasonal
    ax(1,:) = 70*[-1,1];
    ax(2,:) = 70*[-1,1];
    ax(3,:) = 0.5*[-1,1];
  case 2  % QB
    ax(1,:) = 45*[-1,1];
    ax(2,:) = 45*[-1,1];
    ax(3,:) = 0.5*[-1,1];
  case 3  % Interannual
    ax(1,:) = 45*[-1,1];
    ax(2,:) = 45*[-1,1];
    ax(3,:) = 0.8*[-1,1];
  case 4  % Long-term
    ax(1,:) = 35*[-1,1];
    ax(2,:) = 35*[-1,1];
    ax(3,:) = 0.15*[-1,1];
  case 5  % annual
    ax(1,:) = 50*[-1,1];
    ax(2,:) = 50*[-1,1];
    ax(3,:) = 0.5*[-1,1];
end

top = ax(comp,2);
bot = ax(comp,1);
dax = (top-bot)/10;
ytick = bot:dax:top;
ytick(1) = NaN;
ytick(length(ytick)) = NaN;

% make the time axis
t = MJD*0+NaN;
[y, m, d] = mjd2date(MJD);
for ii=1:length(t)
  if isfinite(MJD(ii)) ==1, t(ii)=datenum([y(ii) m(ii) d(ii)]); end
end

% for plot_type 1, lump all the EMAC timeslice runs together so we can 
% just shade between them
% for plot_type 6, lump ALL emac runs tog, including the CCMVal one.
switch plot_type
  case 1
    emac_runs = find(ef);
    emac_shaded = emac_runs(1:3);	% pointers to these runs
    R2 = [4,5,6];			% change the pointer for plotting
    nR2 = length(R2);
  case 2
    R2 = [4,5,6,11];			% this is the pointer for plotting
    if tscale == 3
        R2 = [4,5,11];          % only show E-40 for interannual, for clariy.
    end
    if tscale == 1
        R2 = [4,6,11];          % only show E-Int for subseasonal, for clarity.
    end
    nR2 = length(R2);
  case 6
    emac_shaded = find(ef);
    R2 = [5,6];			% this is the pointer for plotting
    nR2 = length(R2);
  case 7
    R2 = [4,5];			% this is the pointer for plotting
    nR2 = length(R2);
  otherwise    
    nR2 = nR;
    R2 = R;
end

% other plot settings
col = aam_paper_colors;
transparency = 0.3;
% in some cases, change the color of the CCMVal run to make it more distinguishable from GEO
if plot_type == 7 || 2, col(4,:) = [0    0    1]; end
% when only ERA-Interim is shown, make its color that of ERA-40
if tscale == 1
    col(6,:) = col(5,:);
end
dum = summer(40);
soicol = dum(20,:);
gray = 0.5*ones(1,3);
col(net1,:) = gray;
col(net2,:) = gray;

LW = 2;
ph = 6;        % paper height
pw = 20;        % paper width
FS = 16;        % fontsize

%--plots! : 1 figure for each term (mass, wind, total)
for iterm = terms  

  % add other entries to legend handle if there are shaded curves.
  no_shaded = 0;        % number of shaded curves in plot
  if plot_type == 1, no_shaded = 2; end
  if plot_type == 2, no_shaded = 1; end
  if plot_type == 6, no_shaded = 2; end
  if plot_type == 7, no_shaded = 1; end
  lh = zeros(nR2+no_shaded+add_SOI,1)+NaN;	% initialize legend handle

  if export, figure(iterm),clf; end
  lcount = 1;
  
  if add_SOI
    %figure(iterm)
    x = squeeze(XXF(R2(1),iterm,:));
    gg = find(isfinite(x) == 1);
    soibar = bar(tsoi,-SOI');
    lh(lcount) = soibar;
    lcount = lcount+1;
    h1 = gca;                                   % this is the axis for the SOI (bar) plot
    h2 = axes('Position',get(h1,'Position'));	% set up axis for line plot
    plot(t(gg),x(gg),'LineWidth',LW,'Color',col(R2(1),:),'LineStyle','--');   % plot on new axis
    set(h1,'YAxisLocation','right','XTick',[],'XLim',get(h2,'XLim'))	% move SOI index y-axis to right, line up limits
    set(h2,'Color','none')	% 2nd axis goes transparent on top
    %set(h2,'Layer','top')	% make sure the line plot is on top

    datetick(h2,'x','keepticks','keeplimits')
    set(h1,'XLim',get(h2,'XLim'))		% give them both the same xlimits
    set(soibar,'FaceColor',soicol,'Edgecolor',soicol);
    axis(h2,[t(1),max(t), ax(comp,1), ax(comp,2)]);
    % make SOI axis proportional to X3 axis, otherwise the plot looks stupid.
    SOImax = 10*ax(comp,2);	
    axis(h1,[t(1),max(t), -SOImax, SOImax]);
    set(h2,'YTick',ytick)
    set(h1,'YTick',-SOImax:1:SOImax)
    hold on
  else
      h2 = NaN;     % axes to return, in case we don't add the SOI.
      h1 = NaN;
  end
  
  %  for plot types 1,2,6, and 7, add shaded residual AEF estimates
  if plot_type == 1||plot_type == 2||plot_type == 6||plot_type == 7
    net = [net1,net2];
    x_net = XXF(net(isfinite(net)),iterm,:);	% select one or two residual AEFs
    % select how to show error: (1) my comparing two residual estimates, or
    % (2) using the error delivered with the obs.
    switch error_case
        case 1
            xnet_bot = squeeze(min(x_net)); 
            xnet_top = squeeze(max(x_net)); 
        case 2
            unc = find(ef == 4);  
            xnet_bot = squeeze(XXF(net1,iterm,:)-XX(unc,iterm,:));
            xnet_top = squeeze(XXF(net1,iterm,:)+XX(unc,iterm,:));
    end
    [h] = jbfill(t,xnet_bot',xnet_top',gray,gray,1,transparency);
    lh(lcount) = h;
    lcount = lcount+1;
    set(gca,'LineWidth',2.0) 
    hold on
  end


    for irun = 1:nR2
      %figure(iterm)
      names_total(R2(irun))
      x = squeeze(XXF(R2(irun),iterm,:));
      gg = find(isfinite(x) == 1);
      if strcmp(names_total(R2(irun)),'CCMVal')
          LS = '--';
      else
          LS = '-';
      end
      if ~isempty(gg)
        lh(lcount) = plot(t(gg),x(gg),'LineWidth',LW,'Color',col(R2(irun),:),'LineStyle',LS);
        lcount = lcount+1;
        hold on
      end
    end

  % for plot type 1, add shaded emac tslice runs
  if plot_type == 1||plot_type == 6
    x_emac = XXF(emac_shaded,iterm,:);
    xbot = squeeze(min(x_emac)); 
    xtop = squeeze(max(x_emac)); 
    [h] = jbfill(t,xbot',xtop',gray,gray,1,transparency);
    lh(lcount) = h;
    lcount = lcount+1;
  end
  % some commands that the plotyy option is in conflict with:
  if ~add_SOI
    if tscale == 1, datetick('x','mm/yy'), end
    if tscale == 2, datetick('x','yyyy'), end
    if tscale == 3, datetick('x','yyyy'), end
    if tscale == 4, datetick('x','yyyy'), end
    set(gca,'LineWidth',3.0)
    axis([t(1),max(t), ax(comp,1), ax(comp,2)]);
    set(gca,'YTick',ytick)
  end
  ylabel(YL(comp),'FontSize',FS)
  if add_SOI 
      ylabel(h1,'-SOI')
  end
  if label_x_axis
      xlabel('year','FontSize',FS);
  else
     set(gca,'XTickLabel',' '); 
  end
  xlim = get(gca,'Xlim');
  ylim = get(gca,'ylim');
  text(xlim(1)+0.02*(xlim(2)-xlim(1)),0.8*ylim(2),plot_label,'FontSize',FS)
  if plot_type == 1, names_here = [names_total(R2);'EMAC Timeslice';'Obs. Res.']; end
  if plot_type == 2
      switch tscale
          case 1
              names_here = {'OBS','CCMVal','ERA-In'}; 
          case 3
              names_here =  {'OBS','CCMVal','ERA-40'};
      end
  end
  if plot_type == 6, names_here = [names_total(R2);'Free Model';'Inferred from Obs.']; end
  if plot_type == 7, names_here = {'Unconstrained Model AAM';'ERA-40 AAM';'Inferred from Obs.'}; end
  if add_SOI, names_here = ['-SOI',names_here]; end
  %if ~add_SOI
      hlegend = legend(lh(1:length(names_here)),names_here,'Orientation','Horizontal','Location','SouthEast');
      legend('boxoff')
  %end

end

% export!
if export
    
%	1: comparison of all EMAC runs, both ERAs, and the atmosp. residual
%	2: comparison of only CCMVal, ERA40, ERA-Interim, and the atmosp. residual
%	3: comparison of only CCMVal, ERA40, OAM, HAM, and GEO.
%	4: comparison of GEO and CAM 
%       5: comparison of CCMVal data with and without the IB correction
%	6: comparison of ERA40, ERAint, NET, and all emac runs lobbed together.
%	7: like 2, but with CCMVal in a different color, and removing ERA-Int (better for talks)
if plot_type == 1,suff = '_all'; end
if plot_type == 2,suff = '_CCMVal_ERA_NET'; end
if plot_type == 3,suff = '_CMVal_ERA_OAM_HAM_GEO';end
if plot_type == 4,suff = '_GEO_CAM'; end
if plot_type == 5,suff = '_CCMVal_IB'; end
if plot_type == 6,suff = '_ERA_NET_emac'; end
if plot_type == 7,suff = '_CCMVal_ERA_NET_simpler'; end

if add_SOI, suff = [suff,'_soi']; end

plot_dir = '/home/ig/neef/Documents/Plots/aam_run_comparison/';



for iterm = terms
  if iterm == 1, fig_name = [plot_dir,'comp_',tscalename,'_X',num2str(comp),'w',suff,'.png']; end
  if iterm == 2, fig_name = [plot_dir,'comp_',tscalename,'_X',num2str(comp),'m',suff,'.png']; end
  if iterm == 3, fig_name = [plot_dir,'comp_',tscalename,'_X',num2str(comp),'t',suff,'.png']; end
  disp(fig_name)
  exportfig(iterm,fig_name,'width',pw,'height',ph,'fontmode','fixed', 'fontsize',fs,'color','cmyk','LineMode','fixed','LineWidth',LW,'format','png','Renderer','openGL');

end

end




